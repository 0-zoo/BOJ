#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void) {

    char A_str[10002];
    char B_str[10002];
    scanf("%s %s", A_str, B_str);
    int A_len = strlen(A_str);
    int B_len = strlen(B_str);

    int min_len, max_len;
    if (A_len < B_len) {
        min_len = A_len;
        max_len = B_len;
    }
    else {
        min_len = B_len;
        max_len = A_len;
    }

    int A[10002];
    int B[10002];
    for (int count = 0; count < 10002; count++) {
        A[count] = A_str[count] - '0';
        B[count] = B_str[count] - '0';
    }
    int* sum = malloc(sizeof(int) * max_len);
    for (int num = 0; num < max_len; num++) {
        sum[num] = 0;
    }
    for (int i = 0; i < min_len; i++) {
        int a = A[A_len - 1 - i];
        int b = B[B_len - 1 - i];

        int digit = (sum[i] + a + b) % 10;
        int overflow = 0;
        if (sum[i] + a + b >= 10)
            overflow = 1;

        sum[i] = digit;
        if (min_len == max_len && i == min_len - 1) {
            sum[i] += overflow * 10;
        }
        else {
            sum[i + 1] += overflow;
        }
    }
    for (int j = min_len; j < max_len; j++) {
        if (A_len < B_len) {
            sum[j] += B[max_len - 1 - j];
        }
        else
            sum[j] += A[max_len - 1 - j];

        if (sum[j] >= 10 && j != max_len - 1) {
            sum[j] = sum[j] % 10;
            sum[j + 1] += 1;
        }
    }
    for (int k = 0; k < max_len; k++) {
        printf("%d", sum[max_len - 1 - k]);
    }
}
